# ================================================================
# CROPIO CONVERTER PLATFORM - ENVIRONMENT CONFIGURATION
# ================================================================
# Copy this file to .env and update values according to your setup
# Command: cp .env.example .env (Linux/macOS) or copy .env.example .env (Windows)

# === FLASK APPLICATION SETTINGS ===
# Flask environment (development, production, testing)
FLASK_ENV=development
FLASK_DEBUG=True

# Secret key for sessions and CSRF protection (CHANGE THIS!)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-super-secret-key-min-32-chars-long-and-random-change-this

# Application metadata
APP_NAME=Cropio
APP_VERSION=2.0.0
SITE_NAME=Cropio Advanced File Converter
SUPPORT_EMAIL=support@cropio.com

# === DATABASE CONFIGURATION ===
# Development (SQLite) - Default for development
DATABASE_URL=sqlite:///cropio.db

# Production (PostgreSQL) - Uncomment and configure for production
# DATABASE_URL=postgresql://cropio_user:secure_password@localhost:5432/cropio_prod
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=cropio_prod
# DB_USER=cropio_user
# DB_PASSWORD=your-secure-database-password

# === EMAIL CONFIGURATION ===
# Email server settings (required for user verification and password reset)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=True
MAIL_USE_SSL=False
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-gmail-app-password
MAIL_DEFAULT_SENDER=noreply@cropio.com

# Email feature toggles
ENABLE_EMAIL_VERIFICATION=True
ENABLE_PASSWORD_RESET=True
EMAIL_VERIFICATION_TIMEOUT=3600  # 1 hour
PASSWORD_RESET_TIMEOUT=1800      # 30 minutes

# === REDIS CONFIGURATION ===
# Redis for caching, sessions, and rate limiting
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Session storage
SESSION_TYPE=redis
SESSION_PERMANENT=False
SESSION_USE_SIGNER=True
SESSION_REDIS_URL=redis://localhost:6379/1
SESSION_TIMEOUT=3600

# === SECURITY SETTINGS ===
# Rate limiting
RATELIMIT_STORAGE_URL=redis://localhost:6379/2
RATELIMIT_ENABLED=True
RATELIMIT_DEFAULT="100 per hour"
RATELIMIT_LOGIN="5 per minute"
RATELIMIT_UPLOAD="10 per minute"

# CSRF protection
WTF_CSRF_ENABLED=True
WTF_CSRF_TIME_LIMIT=3600
WTF_CSRF_SSL_STRICT=True

# Security headers
SECURE_HEADERS_ENABLED=True
HSTS_ENABLED=True
CSP_ENABLED=True

# === FILE PROCESSING SETTINGS ===
# Upload limits and configuration
MAX_CONTENT_LENGTH=104857600  # 100MB in bytes
UPLOAD_FOLDER=uploads
PROCESSED_FOLDER=processed
TEMP_FOLDER=temp
COMPRESSED_FOLDER=compressed

# File processing limits
MAX_FILE_SIZE_MB=100
MAX_FILES_PER_BATCH=10
MAX_PROCESSING_TIME=300  # 5 minutes

# File cleanup settings
AUTO_CLEANUP_ENABLED=True
CLEANUP_INTERVAL_HOURS=1
MAX_FILE_AGE_HOURS=24
CLEANUP_ON_STARTUP=True

# === USER QUOTAS AND LIMITS ===
# Guest user limits
GUEST_DAILY_LIMIT=5
GUEST_FILE_SIZE_MB=50

# Free user limits
FREE_DAILY_LIMIT=20
FREE_FILE_SIZE_MB=100
FREE_MONTHLY_LIMIT=500

# Premium user limits
PREMIUM_DAILY_LIMIT=1000
PREMIUM_FILE_SIZE_MB=5000
PREMIUM_MONTHLY_LIMIT=unlimited

# === PAYMENT CONFIGURATION (Phase 3) ===
# Razorpay (Indian market)
RAZORPAY_KEY_ID=rzp_test_your-razorpay-key-id
RAZORPAY_KEY_SECRET=your-razorpay-secret-key
RAZORPAY_WEBHOOK_SECRET=your-webhook-secret

# Stripe (International)
STRIPE_PUBLIC_KEY=pk_test_your-stripe-public-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-webhook-secret

# Subscription settings
SUBSCRIPTION_TRIAL_DAYS=7
PREMIUM_PRICE_MONTHLY=999  # ₹999 per month
PREMIUM_PRICE_YEARLY=9999  # ₹9999 per year

# === AI/ML SERVICES (Premium Features) ===
# OpenAI for advanced AI features
OPENAI_API_KEY=sk-your-openai-api-key
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4000

# Hugging Face for specialized models
HUGGINGFACE_API_KEY=hf_your-huggingface-token

# Computer Vision APIs
AZURE_COMPUTER_VISION_KEY=your-azure-cv-key
AZURE_COMPUTER_VISION_ENDPOINT=https://your-region.api.cognitive.microsoft.com/

# === MONITORING AND LOGGING ===
# Sentry for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=1.0

# Application logging
LOG_LEVEL=INFO
LOG_TO_FILE=True
LOG_TO_CONSOLE=True
LOG_ROTATION=True
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Performance monitoring
PROMETHEUS_ENABLED=False
PROMETHEUS_PORT=9090

# === SYSTEM DEPENDENCIES ===
# External tool paths (auto-detected if in PATH)
FFMPEG_PATH=ffmpeg
TESSERACT_PATH=tesseract
WKHTMLTOPDF_PATH=wkhtmltopdf
PANDOC_PATH=pandoc
LATEX_PATH=xelatex

# Tool configuration
TESSERACT_LANGUAGE=eng
FFMPEG_THREADS=4
PDF_DPI=300
IMAGE_QUALITY=85

# === DEVELOPMENT SETTINGS ===
# Development tools
FLASK_DEBUG_TOOLBAR=True
PROFILING_ENABLED=False
DEVELOPMENT_MODE=True

# Testing configuration
TESTING=False
TEST_DATABASE_URL=sqlite:///test_cropio.db
TEST_UPLOAD_FOLDER=test_uploads

# === PRODUCTION SETTINGS ===
# Server configuration
PORT=5000
HOST=127.0.0.1
WORKERS=4
WORKER_CLASS=sync
WORKER_TIMEOUT=300

# SSL configuration
SSL_CERT_PATH=
SSL_KEY_PATH=
SSL_ENABLED=False

# Production optimizations
SEND_FILE_MAX_AGE_DEFAULT=31536000  # 1 year
PERMANENT_SESSION_LIFETIME=86400     # 24 hours

# === CLOUD STORAGE (Optional) ===
# AWS S3 configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET=cropio-files-prod
AWS_REGION=us-east-1
AWS_S3_ENDPOINT_URL=

# Azure Blob Storage
AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=https;AccountName=...;AccountKey=...;EndpointSuffix=core.windows.net
AZURE_CONTAINER_NAME=cropio-files

# Google Cloud Storage
GOOGLE_CLOUD_PROJECT=your-gcp-project-id
GOOGLE_CLOUD_BUCKET=cropio-files-gcs
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json

# === BACKUP AND RECOVERY ===
# Database backup settings
BACKUP_ENABLED=True
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
BACKUP_LOCATION=backups/
BACKUP_COMPRESSION=True

# File backup settings
FILE_BACKUP_ENABLED=False
FILE_BACKUP_CLOUD_SYNC=False

# === ADMIN CONFIGURATION ===
# Default admin user (created on first run)
ADMIN_EMAIL=admin@cropio.com
ADMIN_PASSWORD=change-this-secure-admin-password
ADMIN_NAME=System Administrator

# Admin settings
ADMIN_SESSION_TIMEOUT=7200  # 2 hours
ADMIN_2FA_ENABLED=False

# === FEATURE FLAGS ===
# Core features
ENABLE_USER_REGISTRATION=True
ENABLE_GUEST_ACCESS=True
ENABLE_EMAIL_VERIFICATION=True
ENABLE_PASSWORD_RESET=True

# Processing features
ENABLE_COMPRESSION=True
ENABLE_OCR=True
ENABLE_RAW_PROCESSING=True
ENABLE_VIDEO_PROCESSING=True
ENABLE_BATCH_PROCESSING=True

# Advanced features
ENABLE_ADMIN_PANEL=True
ENABLE_API_ACCESS=True
ENABLE_USAGE_ANALYTICS=True
ENABLE_RATE_LIMITING=True

# Premium features (Phase 3)
ENABLE_AI_FEATURES=False
ENABLE_PREMIUM_TOOLS=False
ENABLE_ADVANCED_OCR=False

# === PERFORMANCE SETTINGS ===
# Celery for background tasks
CELERY_BROKER_URL=redis://localhost:6379/3
CELERY_RESULT_BACKEND=redis://localhost:6379/4
CELERY_TASK_TIMEOUT=600
CELERY_WORKER_PROCESSES=2

# Cache configuration
CACHE_TYPE=redis
CACHE_REDIS_URL=redis://localhost:6379/5
CACHE_DEFAULT_TIMEOUT=300
CACHE_THRESHOLD=1000

# Processing optimization
IMAGE_PROCESSING_THREADS=4
PDF_PROCESSING_THREADS=2
MAX_CONCURRENT_CONVERSIONS=10

# === SECURITY HEADERS ===
# Content Security Policy
CSP_ENABLED=True
CSP_DEFAULT_SRC="'self'"
CSP_SCRIPT_SRC="'self' 'unsafe-inline' cdnjs.cloudflare.com"
CSP_STYLE_SRC="'self' 'unsafe-inline' fonts.googleapis.com"

# Security headers
HSTS_ENABLED=True
HSTS_MAX_AGE=31536000
REFERRER_POLICY=strict-origin-when-cross-origin
X_CONTENT_TYPE_OPTIONS=nosniff
X_FRAME_OPTIONS=DENY

# === API CONFIGURATION ===
# API rate limiting
API_RATE_LIMIT=100 per hour
API_BURST_LIMIT=10 per minute

# API authentication
API_KEY_REQUIRED=False
API_JWT_ENABLED=False
JWT_SECRET_KEY=your-jwt-secret-key
JWT_EXPIRATION_HOURS=24

# === CLOUD INTEGRATION ===
# Content Delivery Network
CDN_ENABLED=False
CDN_DOMAIN=cdn.cropio.com

# External storage
CLOUD_STORAGE_ENABLED=False
CLOUD_STORAGE_PROVIDER=s3  # s3, azure, gcs

# === MONITORING AND ANALYTICS ===
# Error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Application monitoring
PROMETHEUS_ENABLED=False
PROMETHEUS_PORT=9090
GRAFANA_ENABLED=False

# Usage analytics
ANALYTICS_ENABLED=True
ANALYTICS_RETENTION_DAYS=90
ANALYTICS_EXPORT_ENABLED=True

# === DEVELOPMENT SETTINGS ===
# Development tools
FLASK_DEBUG_TOOLBAR=True
PROFILING_ENABLED=False
DEVELOPMENT_MODE=True
HOT_RELOAD=True

# Testing configuration
TESTING=False
TEST_DATABASE_URL=sqlite:///test_cropio.db
TEST_UPLOAD_FOLDER=test_uploads
RUN_INTEGRATION_TESTS=False

# Code quality
CODE_COVERAGE_ENABLED=False
LINTING_ON_SAVE=False

# ================================================================
# SETUP INSTRUCTIONS
# ================================================================
# 1. Copy this file: cp .env.example .env
# 2. Generate SECRET_KEY: python -c "import secrets; print(secrets.token_hex(32))"
# 3. Configure email (Gmail example):
#    - Enable 2FA on Google account
#    - Generate App Password
#    - Use App Password as MAIL_PASSWORD
# 4. Set up database (PostgreSQL for production)
# 5. Configure Redis (optional but recommended)
# 6. Test configuration: python check_backends.py
# 7. Initialize database: python init_db.py
# 8. Run application: python app.py
#
# For production deployment:
# - Set FLASK_ENV=production
# - Use PostgreSQL instead of SQLite
# - Configure proper SECRET_KEY
# - Set up SSL certificates
# - Configure monitoring tools
# - Set strong admin credentials
